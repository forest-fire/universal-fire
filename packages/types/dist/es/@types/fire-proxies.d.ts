import type { auth as adminAuth, app as adminApp, database as adminDatabase, firestore as adminFirestore } from 'firebase-admin';
export declare type IClientAuth = import('@firebase/auth-types').FirebaseAuth;
export declare type IClientAuthProviders = FirebaseNamespace['auth'];
export declare type ActionCodeInfo = import('@firebase/auth-types').ActionCodeInfo;
export declare type ActionCodeSettings = import('@firebase/auth-types').ActionCodeSettings;
export declare type AdditionalUserInfo = import('@firebase/auth-types').AdditionalUserInfo;
export declare type ApplicationVerifier = import('@firebase/auth-types').ApplicationVerifier;
export declare type AuthCredential = import('@firebase/auth-types').AuthCredential;
export declare type AuthProvider = import('@firebase/auth-types').AuthProvider;
export declare type ConfirmationResult = import('@firebase/auth-types').ConfirmationResult;
export declare type AuthSettings = import('@firebase/auth-types').AuthSettings;
export declare type EmailAuthProvider_Instance = import('@firebase/auth-types').EmailAuthProvider_Instance;
export declare type FacebookAuthProvider_Instance = import('@firebase/auth-types').FacebookAuthProvider_Instance;
export declare type FirebaseAuth = import('@firebase/auth-types').FirebaseAuth;
export declare type GithubAuthProvider_Instance = import('@firebase/auth-types').GithubAuthProvider_Instance;
export declare type GoogleAuthProvider = import('@firebase/auth-types').GoogleAuthProvider;
export declare type GoogleEmailAuthProvider = import('@firebase/auth-types').EmailAuthProvider;
export declare type GoogleFacebookAuthProvider = import('@firebase/auth-types').FacebookAuthProvider;
export declare type GoogleGithubAuthProvider = import('@firebase/auth-types').GithubAuthProvider;
export declare type GooglePhoneAuthProvider = import('@firebase/auth-types').PhoneAuthProvider;
export declare type GoogleRecaptchaVerifier = import('@firebase/auth-types').RecaptchaVerifier;
export declare type IdTokenResult = import('@firebase/auth-types').IdTokenResult;
export declare type IEmailAuthProvider = import('@firebase/auth-types').EmailAuthProvider;
export declare type OAuthCredential = import('@firebase/auth-types').OAuthCredential;
export declare type OAuthProvider = import('@firebase/auth-types').OAuthProvider;
export declare type Persistence = import('@firebase/auth-types').Persistence;
export declare type PhoneAuthProvider_Instance = import('@firebase/auth-types').PhoneAuthProvider_Instance;
export declare type RecaptchaVerifier_Instance = import('@firebase/auth-types').RecaptchaVerifier_Instance;
export declare type SAMLAuthProvider = import('@firebase/auth-types').SAMLAuthProvider;
export declare type TwitterAuthProvider = import('@firebase/auth-types').TwitterAuthProvider;
export declare type TwitterAuthProvider_Instance = import('@firebase/auth-types').TwitterAuthProvider_Instance;
export declare type UserCredential = import('@firebase/auth-types').UserCredential;
export declare type User = import('@firebase/auth-types').User;
export declare type FirebaseNamespace = import('@firebase/app-types').FirebaseNamespace;
/**
 * The root Firebase App API surface where you can engage services such as `database()`,
 * `firestore()`, `storage()`, etc.
 */
export declare type IFirebaseApp = FirebaseNamespace['app'];
export declare type IClientApp = import('@firebase/app-types').FirebaseApp;
export declare type IClientRtdbDatabase = import('@firebase/database-types').FirebaseDatabase;
export declare type IRealTimeQuery = import('@firebase/database-types').Query;
export declare type IRtdbDataSnapshot = import('@firebase/database-types').DataSnapshot;
export declare type IRtdbDbEvent = import('@firebase/database-types').EventType;
export declare type IRtdbOnDisconnect = import('@firebase/database-types').OnDisconnect;
export declare type IRtdbQuery = import('@firebase/database-types').Query;
export declare type IRtdbReference = import('@firebase/database-types').Reference;
export declare type IRtdbThenableReference = import('@firebase/database-types').ThenableReference;
export declare type IClientFirestoreDatabase = import('@firebase/firestore-types').FirebaseFirestore;
export declare type IFirestoreDbEvent = import('@firebase/firestore-types').DocumentChangeType;
export declare type IFirestoreQuery = import('@firebase/firestore-types').Query;
export declare type IFirestoreQuerySnapshot = import('@firebase/firestore-types').QuerySnapshot;
export declare type Auth = import('firebase-admin').auth.Auth;
export declare type CreateRequest = import('firebase-admin').auth.CreateRequest;
export declare type DecodedIdToken = import('firebase-admin').auth.DecodedIdToken;
export declare type ListUsersResult = import('firebase-admin').auth.ListUsersResult;
export declare type UpdateRequest = import('firebase-admin').auth.UpdateRequest;
export declare type UserRecord = import('firebase-admin').auth.UserRecord;
export declare type IAdminAuth = adminAuth.Auth;
export declare type IServiceAccount = import('firebase-admin').ServiceAccount;
export declare type IAdminApp = adminApp.App;
export declare type IAdminFirestoreDatabase = adminFirestore.Firestore;
export declare type IFirestoreDatabase = IClientFirestoreDatabase | IAdminFirestoreDatabase;
export declare type IAdminRtdbDatabase = adminDatabase.Database;
export declare type IRtdbDatabase = IClientRtdbDatabase | IAdminRtdbDatabase;
/** watcher events from either Firestore or RealTime database*/
export declare type IAbstractedEvents = IRtdbDbEvent | IFirestoreDbEvent;
